name: Android Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK tools
        uses: android-actions/setup-android@v3

      - name: Install Android platform tools
        run: |
          yes | sdkmanager --install "platforms;android-28" "build-tools;28.0.3"
          if [ -d "$ANDROID_SDK_ROOT/build-tools" ]; then
            find "$ANDROID_SDK_ROOT/build-tools" -mindepth 1 -maxdepth 1 -type d ! -name '28.0.3' -exec rm -rf {} +
          fi

      - name: Build with Maven Wrapper
        run: ./mvnw -B verify

      - name: Run API 28 installation smoke test
        shell: bash
        env:
          AVD_NAME: ci-android-28
        run: |
          set -euxo pipefail
          export ANDROID_HOME="$ANDROID_SDK_ROOT"
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH"

          set +o pipefail
          yes | sdkmanager --install "platforms;android-28" "system-images;android-28;google_apis;x86"
          set -o pipefail

          if avdmanager list avd | grep -q "${AVD_NAME}"; then
            avdmanager delete avd -n "${AVD_NAME}"
          fi

          echo "no" | avdmanager create avd \
            -n "${AVD_NAME}" \
            -k "system-images;android-28;google_apis;x86" \
            --device "pixel_3"

          emulator -avd "${AVD_NAME}" -no-window -no-audio -no-boot-anim &
          EMULATOR_PID=$!
          trap 'kill "${EMULATOR_PID}" 2>/dev/null || true' EXIT

          adb wait-for-device
          adb shell 'while [ -z "$(getprop sys.boot_completed 2>/dev/null)" ]; do sleep 1; done'
          adb shell input keyevent 82
          adb emu kill

      - name: Upload built APK artifact
        if: ${{ always() }}
        id: upload_apk
        uses: actions/upload-artifact@v4
        with:
          name: uqureader-apk-${{ github.run_number }}
          path: target/*.apk
          if-no-files-found: ignore

      - name: Prune old APK artifacts
        if: ${{ always() && steps.upload_apk.outputs.artifact-id }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prefix = 'uqureader-apk-';
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const perPage = 100;
            let page = 1;
            const artifacts = [];

            while (true) {
              const { data } = await github.rest.actions.listArtifactsForRepo({
                owner,
                repo,
                per_page: perPage,
                page,
              });

              if (!data.artifacts.length) {
                break;
              }

              artifacts.push(
                ...data.artifacts.filter((artifact) => artifact.name && artifact.name.startsWith(prefix))
              );

              if (data.artifacts.length < perPage) {
                break;
              }

              page += 1;
            }

            artifacts.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
            const toDelete = artifacts.slice(3);

            for (const artifact of toDelete) {
              core.info(`Deleting artifact ${artifact.name} (${artifact.id})`);
              await github.rest.actions.deleteArtifact({
                owner,
                repo,
                artifact_id: artifact.id,
              });
            }
